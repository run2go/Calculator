// -*- C++ -*-
//
// generated by wxGlade 1.0.5 on Wed Feb 14 09:49:18 2024
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "CalculatorFrame.h"
#include "ElementIds.h" // "Keep user code". Duh.

// begin wxGlade: ::extracode
// end wxGlade

CalculatorFrame::CalculatorFrame(wxWindow *parent, wxWindowID id, const wxString &title, const wxPoint &pos, const wxSize &size, long style) : wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    // begin wxGlade: CalculatorFrame::CalculatorFrame
    SetSize(wxSize(467, 698));
    SetTitle(wxT("frame"));
    Calculator_menubar = new wxMenuBar();
    wxMenu *wxglade_tmp_menu;
    wxMenuItem *wxglade_tmp_item;
    wxglade_tmp_menu = new wxMenu();
    wxglade_tmp_menu->Append(101, wxT("Simple"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &CalculatorFrame::OnViewSelection, this, 101);
    wxglade_tmp_menu->Append(102, wxT("Advanced"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &CalculatorFrame::OnViewSelection, this, 102);
    wxglade_tmp_menu->Append(103, wxT("Programmer"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &CalculatorFrame::OnViewSelection, this, 103);
    Calculator_menubar->Append(wxglade_tmp_menu, wxT("View"));
    wxglade_tmp_menu = new wxMenu();
    wxglade_tmp_item = wxglade_tmp_menu->Append(wxID_ANY, wxT("Darkmode"), wxEmptyString, wxITEM_CHECK);
    Bind(wxEVT_MENU, &CalculatorFrame::OnDarkModeChange, this, wxglade_tmp_item->GetId());
    wxglade_tmp_menu->Append(256, wxT("Debug"), wxEmptyString, wxITEM_CHECK);
    Bind(wxEVT_MENU, &CalculatorFrame::OnDebugModeChange, this, 256);
    Calculator_menubar->Append(wxglade_tmp_menu, wxT("Edit"));
    wxglade_tmp_menu = new wxMenu();
    Calculator_menubar->Append(wxglade_tmp_menu, wxT("Version"));
    SetMenuBar(Calculator_menubar);
    wxBoxSizer *sizer_main = new wxBoxSizer(wxVERTICAL);
    wxGridSizer *sizer_output = new wxGridSizer(2, 1, 0, 0);
    sizer_main->Add(sizer_output, 20, wxEXPAND, 0);
    label_eval = new wxStaticText(this, wxID_ANY, wxEmptyString);
    label_eval->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_output->Add(label_eval, 0, wxALIGN_CENTER_VERTICAL | wxEXPAND, 0);
    wxFlexGridSizer *sizer_input = new wxFlexGridSizer(1, 2, 0, 0);
    sizer_output->Add(sizer_input, 0, wxEXPAND, 0);
    label_symbol = new wxStaticText(this, wxID_ANY, wxT(">"));
    label_symbol->SetFont(wxFont(18, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_input->Add(label_symbol, 5, wxALIGN_CENTER_VERTICAL, 0);
    label_input = new wxStaticText(this, wxID_ANY, wxT("0"));
    label_input->SetFont(wxFont(18, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_input->Add(label_input, 5, wxALIGN_CENTER_VERTICAL | wxEXPAND, 0);
    wxStaticBoxSizer *sizer_base = new wxStaticBoxSizer(new wxStaticBox(this, wxID_ANY, wxT("Base Selection")), wxVERTICAL);
    sizer_main->Add(sizer_base, 20, wxEXPAND, 0);
    wxFlexGridSizer *grid_sizer_base = new wxFlexGridSizer(4, 2, 0, 0);
    sizer_base->Add(grid_sizer_base, 1, wxALL | wxEXPAND, 3);
    radio_btn_base64 = new wxRadioButton(this, View3::RB_BASE_64, wxT("Base64"));
    radio_btn_base64->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    grid_sizer_base->Add(radio_btn_base64, 0, 0, 0);
    button_base64 = new wxButton(this, View3::BT_BASE_64, wxT("0"), wxDefaultPosition, wxDefaultSize, wxBU_LEFT);
    button_base64->SetFont(wxFont(12, wxFONTFAMILY_MODERN, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Consolas")));
    grid_sizer_base->Add(button_base64, 0, wxEXPAND, 0);
    radio_btn_base16 = new wxRadioButton(this, View3::RB_BASE_16, wxT("Hex 16"));
    radio_btn_base16->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    grid_sizer_base->Add(radio_btn_base16, 0, 0, 0);
    button_base16 = new wxButton(this, View3::BT_BASE_16, wxT("0"), wxDefaultPosition, wxDefaultSize, wxBU_LEFT);
    button_base16->SetFont(wxFont(12, wxFONTFAMILY_MODERN, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Consolas")));
    grid_sizer_base->Add(button_base16, 0, wxEXPAND, 0);
    radio_btn_base10 = new wxRadioButton(this, View3::RB_BASE_10, wxT("Dec 10"));
    radio_btn_base10->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    radio_btn_base10->SetValue(1);
    grid_sizer_base->Add(radio_btn_base10, 0, 0, 0);
    button_base10 = new wxButton(this, View3::BT_BASE_10, wxT("0"), wxDefaultPosition, wxDefaultSize, wxBU_LEFT);
    button_base10->SetFont(wxFont(12, wxFONTFAMILY_MODERN, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Consolas")));
    grid_sizer_base->Add(button_base10, 0, wxEXPAND, 0);
    radio_btn_base2 = new wxRadioButton(this, View3::RB_BASE_2, wxT("Bin    2"));
    radio_btn_base2->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    grid_sizer_base->Add(radio_btn_base2, 0, 0, 0);
    button_base2 = new wxButton(this, View3::BT_BASE_2, wxT("0"), wxDefaultPosition, wxDefaultSize, wxBU_LEFT);
    button_base2->SetFont(wxFont(12, wxFONTFAMILY_MODERN, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Consolas")));
    grid_sizer_base->Add(button_base2, 0, wxEXPAND, 0);
    wxGridSizer *sizer_buttons = new wxGridSizer(6, 6, 0, 0);
    sizer_main->Add(sizer_buttons, 80, wxEXPAND, 0);
    button_num_a = new wxButton(this, View3::NUM_A, wxT("A"));
    button_num_a->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_a, 0, wxEXPAND, 0);
    button_delete = new wxButton(this, View3::BT_DELETE, wxT("Delete"));
    button_delete->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_delete, 0, wxEXPAND, 0);
    sizer_buttons->Add(0, 0, 0, 0, 0);
    button_clear = new wxButton(this, View3::BT_CLEAR, wxT("Clear"));
    button_clear->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_clear, 0, wxEXPAND, 0);
    sizer_buttons->Add(0, 0, 0, 0, 0);
    button_copy = new wxButton(this, View3::BT_COPY, wxT("ðŸ“‹"));
    button_copy->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_copy, 0, wxEXPAND, 0);
    button_num_b = new wxButton(this, View3::NUM_B, wxT("B"));
    button_num_b->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_b, 0, wxEXPAND, 0);
    button_symbol_bracket_open = new wxButton(this, View2::SYM_BRACKET_OPEN, wxT("("));
    button_symbol_bracket_open->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_symbol_bracket_open, 0, wxEXPAND, 0);
    button_symbol_bracket_close = new wxButton(this, View2::SYM_BRACKET_CLOSE, wxT(")"));
    button_symbol_bracket_close->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_symbol_bracket_close, 0, wxEXPAND, 0);
    button_symbol_pow = new wxButton(this, View2::SYM_POW, wxT("^"));
    button_symbol_pow->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_symbol_pow, 0, wxEXPAND, 0);
    button_symbol_sqrt = new wxButton(this, View2::SYM_SQRT, wxT("âˆš"));
    button_symbol_sqrt->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_symbol_sqrt, 0, wxEXPAND, 0);
    button_factorial = new wxButton(this, View2::SYM_FACTORIAL, wxT("n!"));
    button_factorial->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_factorial, 0, wxEXPAND, 0);
    button_num_c = new wxButton(this, View3::NUM_C, wxT("C"));
    button_num_c->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_c, 0, wxEXPAND, 0);
    button_num_7 = new wxButton(this, View1::NUM_7, wxT("7"));
    button_num_7->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_7, 0, wxEXPAND, 0);
    button_num_8 = new wxButton(this, View1::NUM_8, wxT("8"));
    button_num_8->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_8, 0, wxEXPAND, 0);
    button_num_9 = new wxButton(this, View1::NUM_9, wxT("9"));
    button_num_9->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_9, 0, wxEXPAND, 0);
    button_div = new wxButton(this, View1::OP_DIV, wxT("/"));
    button_div->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_div, 0, wxEXPAND, 0);
    button_negate = new wxButton(this, View2::SYM_NEGATE, wxT("Â±"));
    button_negate->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_negate, 0, wxEXPAND, 0);
    button_num_d = new wxButton(this, View3::NUM_D, wxT("D"));
    button_num_d->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_d, 0, wxEXPAND, 0);
    button_num_4 = new wxButton(this, View1::NUM_4, wxT("4"));
    button_num_4->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_4, 0, wxEXPAND, 0);
    button_num_5 = new wxButton(this, View1::NUM_5, wxT("5"));
    button_num_5->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_5, 0, wxEXPAND, 0);
    button_num_6 = new wxButton(this, View1::NUM_6, wxT("6"));
    button_num_6->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_6, 0, wxEXPAND, 0);
    button_mul = new wxButton(this, View1::OP_MUL, wxT("x"));
    button_mul->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_mul, 0, wxEXPAND, 0);
    button_reciprocal = new wxButton(this, View2::SYM_RECIPROCAL, wxT("1/n"));
    button_reciprocal->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_reciprocal, 0, wxEXPAND, 0);
    button_num_e = new wxButton(this, View3::NUM_E, wxT("E"));
    button_num_e->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_e, 0, wxEXPAND, 0);
    button_num_1 = new wxButton(this, View1::NUM_1, wxT("1"));
    button_num_1->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_1, 0, wxEXPAND, 0);
    button_num_2 = new wxButton(this, View1::NUM_2, wxT("2"));
    button_num_2->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_2, 0, wxEXPAND, 0);
    button_num_3 = new wxButton(this, View1::NUM_3, wxT("3"));
    button_num_3->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_3, 0, wxEXPAND, 0);
    button_sub = new wxButton(this, View1::OP_SUB, wxT("-"));
    button_sub->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_sub, 0, wxEXPAND, 0);
    button_pi = new wxButton(this, View2::SYM_PI, wxT("Ï€"));
    button_pi->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_pi, 0, wxEXPAND, 0);
    button_num_f = new wxButton(this, View3::NUM_F, wxT("F"));
    button_num_f->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_f, 0, wxEXPAND, 0);
    button_comma = new wxButton(this, View1::SYM_COMMA, wxT(","));
    button_comma->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_comma, 0, wxEXPAND, 0);
    button_num_0 = new wxButton(this, View1::NUM_0, wxT("0"));
    button_num_0->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_num_0, 0, wxEXPAND, 0);
    button_eval = new wxButton(this, View1::BT_EVAL, wxT("="));
    button_eval->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    button_eval->SetFocus();
    sizer_buttons->Add(button_eval, 0, wxEXPAND, 0);
    button_add = new wxButton(this, View1::OP_ADD, wxT("+"));
    button_add->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_add, 0, wxEXPAND, 0);
    button_percent = new wxButton(this, View2::SYM_PERCENT, wxT("%"));
    button_percent->SetFont(wxFont(14, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("Segoe UI")));
    sizer_buttons->Add(button_percent, 0, wxEXPAND, 0);

    grid_sizer_base->AddGrowableCol(1);
    sizer_input->AddGrowableCol(1);
    SetSizer(sizer_main);
    Layout();
    // end wxGlade
}

BEGIN_EVENT_TABLE(CalculatorFrame, wxFrame)
// begin wxGlade: CalculatorFrame::event_table
EVT_RADIOBUTTON(View3::RB_BASE_64, CalculatorFrame::OnBaseSelection)
EVT_BUTTON(View3::BT_BASE_64, CalculatorFrame::OnBaseCopy)
EVT_RADIOBUTTON(View3::RB_BASE_16, CalculatorFrame::OnBaseSelection)
EVT_BUTTON(View3::BT_BASE_16, CalculatorFrame::OnBaseCopy)
EVT_RADIOBUTTON(View3::RB_BASE_10, CalculatorFrame::OnBaseSelection)
EVT_BUTTON(View3::BT_BASE_10, CalculatorFrame::OnBaseCopy)
EVT_RADIOBUTTON(View3::RB_BASE_2, CalculatorFrame::OnBaseSelection)
EVT_BUTTON(View3::BT_BASE_2, CalculatorFrame::OnBaseCopy)
EVT_BUTTON(View3::NUM_A, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::BT_DELETE, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::BT_CLEAR, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::BT_COPY, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::NUM_B, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_BRACKET_OPEN, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_BRACKET_CLOSE, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_POW, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_SQRT, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_FACTORIAL, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::NUM_C, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_7, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_8, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_9, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::OP_DIV, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_NEGATE, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::NUM_D, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_4, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_5, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_6, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::OP_MUL, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_RECIPROCAL, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::NUM_E, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_1, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_2, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_3, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::OP_SUB, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_PI, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View3::NUM_F, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::SYM_COMMA, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::NUM_0, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::BT_EVAL, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View1::OP_ADD, CalculatorFrame::OnButtonPressed)
EVT_BUTTON(View2::SYM_PERCENT, CalculatorFrame::OnButtonPressed)
// end wxGlade
END_EVENT_TABLE();

void CalculatorFrame::OnViewSelection(wxCommandEvent &event) // wxGlade: CalculatorFrame.<event_handler>
{
    event.Skip();
    // notify the user that he hasn't implemented the event handler yet
    wxLogDebug(wxT("Event handler (CalculatorFrame::OnViewSelection) not implemented yet"));
}

void CalculatorFrame::OnDarkModeChange(wxCommandEvent &event) // wxGlade: CalculatorFrame.<event_handler>
{
    event.Skip();
    // notify the user that he hasn't implemented the event handler yet
    wxLogDebug(wxT("Event handler (CalculatorFrame::OnDarkModeChange) not implemented yet"));
}

void CalculatorFrame::OnDebugModeChange(wxCommandEvent &event) // wxGlade: CalculatorFrame.<event_handler>
{
    event.Skip();
    // notify the user that he hasn't implemented the event handler yet
    wxLogDebug(wxT("Event handler (CalculatorFrame::OnDebugModeChange) not implemented yet"));
}

void CalculatorFrame::OnVersion(wxCommandEvent &event) // wxGlade: CalculatorFrame.<event_handler>
{
    event.Skip();
    // notify the user that he hasn't implemented the event handler yet
    wxLogDebug(wxT("Event handler (CalculatorFrame::OnVersion) not implemented yet"));
}

void CalculatorFrame::OnBaseSelection(wxCommandEvent &event) // wxGlade: CalculatorFrame.<event_handler>
{
    event.Skip();
    // notify the user that he hasn't implemented the event handler yet
    wxLogDebug(wxT("Event handler (CalculatorFrame::OnBaseSelection) not implemented yet"));
}

void CalculatorFrame::OnBaseCopy(wxCommandEvent &event) // wxGlade: CalculatorFrame.<event_handler>
{
    event.Skip();
    // notify the user that he hasn't implemented the event handler yet
    wxLogDebug(wxT("Event handler (CalculatorFrame::OnBaseCopy) not implemented yet"));
}

void CalculatorFrame::OnButtonPressed(wxCommandEvent &event) // wxGlade: CalculatorFrame.<event_handler>
{
    event.Skip();
    // notify the user that he hasn't implemented the event handler yet
    wxLogDebug(wxT("Event handler (CalculatorFrame::OnButtonPressed) not implemented yet"));
}

// wxGlade: add CalculatorFrame event handlers
